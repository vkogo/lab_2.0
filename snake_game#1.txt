#include<iostream>
#include<conio.h>
#include<stdlib.h>
#include<time.h>
using namespace std;

bool gameover;
const int width = 40;
const int height = 20;
int x, y, pointX, pointY , score;
int tallX[100], tallY[100];
int tail;
enum direction { STOP = 0, LEFT, RIGHT, DOWN, UP};
direction dir;
string G = "YOU LOSE";

void setup() {
	
	gameover = false;
	dir = STOP;
	x = width / 2 - 1;
	y = height / 2 - 1;
	pointX = rand() % width;
	pointY = rand() % height;
	score = 0;

	
}
void Draw(){
	
	system("cls");
	for (int i = 0; i < width + 1; i++) 
		cout << "#";
	cout << endl;
	
	for (int i = 0; i < height; i++) {
		for (int j = 0; j < width; j++){
			if (j == 0 || j == width - 1) 
				cout << "#";
			if (i == y && j == x)
				cout << "@";
			else if (i == pointY && j == pointX)
				cout << "o";
			else {
				bool print = false;
				for (int d = 0; d < tail; d++)
				{
					if (tallX[d] == j && tallY[d] == i) {
						print = true;

						cout << "s";
					}
					
				}
				if(!print)
				cout << " ";
			}
		}
		cout << endl;
	}
	for (int i = 0; i < width+1; i++) 
		cout << "#";
	cout << endl;
	cout<<"SCORE = "<<score<<endl;
	
}
void Input(){
	if (_kbhit()) {
		switch (_getch ())
		{
		case 'a':
			dir = LEFT;
			break;
		case 'd':
			dir = RIGHT;
			break;
		case 's':
			dir = DOWN;
			break;
		case 'w':
			dir = UP;
			break;
		
		case'q':
			gameover = true;
			break;
		
		}
	}
}
void Logic(){
	int prevX = tallX[0];
	int prevY = tallY[0];
	int prevX2, prevY2;
	tallX[0] = x;
	tallY[0] = y;
	for (int i = 1; i < tail; i++)
	{
		prevX2 = tallX[i];
		prevY2 = tallY[i];
		tallX[i] = prevX;
		tallY[i] = prevY;
		prevX = prevX2;
		prevY = prevY2;
	}
	switch (dir)
	{
	
	case LEFT:
		x--;
		break;
	case RIGHT:
		x++;
		break;
	case DOWN:
		y++;
		break;
	case UP:
		y--;
		break;
	}

	//if (x > width || x < 0 || y > height || y < 0)
		//gameover = true;
	if (x >= width)
		x = 0;
	else if (x < 0)
		x = width - 1;
	if (y >= height)
		y = 0;
	else if (y < 0)
		y = height - 1;
	for (int i = 0; i < tail; i++)
	{
		if (tallX[i] == x && tallY[i] == y)
		{
			gameover = true;
		}

	}

	if (x == pointX && y == pointY) {
		score += 10;
		pointX = rand() % width;
		pointY = rand() % height;
		tail++;
	}	
}
int main() {
	
	setup();
	while (!gameover)
	{		
		Draw();
		Input();
		Logic();
	
	
	}
	return 0;
}